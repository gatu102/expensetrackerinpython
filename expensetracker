import json
import os

EXPENSE_FILE = "expenses.json"

def load_expenses():
    if os.path.exists(EXPENSE_FILE):
        with open(EXPENSE_FILE, "r") as f:
            return json.load(f)
    return []

def save_expenses(expenses):
    with open(EXPENSE_FILE, "w") as f:
        json.dump(expenses, f, indent=4)

def show_expenses(expenses):
    if not expenses:
        print("\nNo expenses recorded.\n")
        return
    print("\nYour Expenses:")
    total = 0
    for idx, exp in enumerate(expenses, 1):
        print(f"{idx}. {exp['category']}: {exp['amount']}")
        total += exp['amount']
    print(f"Total Expenses: {total}\n")

def add_expense(expenses):
    category = input("Enter category (food, transport, etc.): ").strip()
    try:
        amount = float(input("Enter amount: "))
    except ValueError:
        print("Invalid amount.")
        return
    expenses.append({"category": category, "amount": amount})
    print("Expense added!\n")

def delete_expense(expenses):
    show_expenses(expenses)
    if not expenses:
        return
    try:
        idx = int(input("Enter expense number to delete: "))
        if 1 <= idx <= len(expenses):
            removed = expenses.pop(idx-1)
            print(f"Removed {removed['category']}: {removed['amount']}\n")
        else:
            print("Invalid number.")
    except ValueError:
        print("Enter a valid number.")

def main():
    expenses = load_expenses()
    while True:
        print("==== Expense Tracker ====")
        print("1. View Expenses")
        print("2. Add Expense")
        print("3. Delete Expense")
        print("4. Exit")
        choice = input("Enter choice (1-4): ").strip()
        if choice == "1":
            show_expenses(expenses)
        elif choice == "2":
            add_expense(expenses)
        elif choice == "3":
            delete_expense(expenses)
        elif choice == "4":
            save_expenses(expenses)
            print("Expenses saved. Goodbye!")
            break
        else:
            print("Invalid choice.\n")

if __name__ == "__main__":
    main()
